{
  "contractName": "BaseRelayRecipient",
  "abi": [
    {
      "inputs": [],
      "name": "versionRecipient",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionRecipient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isTrustedForwarder(address)\":{\"details\":\"Check if the forwarder is trusted\"},\"versionRecipient()\":{\"details\":\"EIP 2771 version NOTE: - It is not clear if it is actually from the EIP 2771.... - https://docs.biconomy.io/guides/enable-gasless-transactions/eip-2771\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A base contract to be inherited by any contract that want to receive relayed transactions A subclass must use \\\"_msgSender()\\\" instead of \\\"msg.sender\\\"\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/runner/work/protocol-monorepo/protocol-monorepo/packages/ethereum-contracts/contracts/ux/BaseRelayRecipient.sol\":\"BaseRelayRecipient\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/runner/work/protocol-monorepo/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/ux/IRelayRecipient.sol\":{\"keccak256\":\"0x6958231965a70d83a59ce4f1b28f719e2d6bcb4b0956c9751312d6fe42d4887c\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://dbdcca19c2f27cd7e96c16a826af93161f5e5319740fbfbd798cf6d6d5d035fd\",\"dweb:/ipfs/QmdFH4Q9MXs2s73v6g93Yox6maanboftnGHa4nVg2pFNxS\"]},\"/home/runner/work/protocol-monorepo/protocol-monorepo/packages/ethereum-contracts/contracts/ux/BaseRelayRecipient.sol\":{\"keccak256\":\"0x55002bbc51ab546f5fe9c23b7b02a846a70a509c7f89640b8ba28a0db6ba0a47\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5195ffe8179f2d375a31fc4c07e73b3597c83333622d9ad835c3ac73b183d908\",\"dweb:/ipfs/QmXcYYNhbZSKWWNhHrQCynK1zsd9yVJ8DaRS5uCnRo8vMd\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: AGPLv3\npragma solidity 0.7.6;\n\n// MODIFIED FROM: https://github.com/opengsn/forwarder/blob/master/contracts/BaseRelayRecipient.sol\n\nimport \"../interfaces/ux/IRelayRecipient.sol\";\n\n/**\n * A base contract to be inherited by any contract that want to receive relayed transactions\n * A subclass must use \"_msgSender()\" instead of \"msg.sender\"\n */\nabstract contract BaseRelayRecipient is IRelayRecipient {\n\n    /**\n     * @dev Check if the forwarder is trusted\n     */\n    function isTrustedForwarder(address forwarder) public view virtual override returns(bool);\n\n    /**\n     * @dev Return the transaction signer of this call\n     *\n     * if the call came through our trusted forwarder, return the original sender.\n     * otherwise, return `msg.sender`.\n     * should be used in the contract anywhere instead of msg.sender\n     */\n    function _getTransactionSigner() internal virtual view returns (address payable ret) {\n        require(msg.data.length >= 24 && isTrustedForwarder(msg.sender), \"Not trusted forwarder\");\n        // At this point we know that the sender is a trusted forwarder,\n        // so we trust that the last bytes of msg.data are the verified sender address.\n        // extract sender address from the end of msg.data\n        assembly {\n            ret := shr(96,calldataload(sub(calldatasize(),20)))\n        }\n    }\n\n}\n",
  "sourcePath": "/home/runner/work/protocol-monorepo/protocol-monorepo/packages/ethereum-contracts/contracts/ux/BaseRelayRecipient.sol",
  "ast": {
    "absolutePath": "/home/runner/work/protocol-monorepo/protocol-monorepo/packages/ethereum-contracts/contracts/ux/BaseRelayRecipient.sol",
    "exportedSymbols": {
      "BaseRelayRecipient": [
        22983
      ],
      "IRelayRecipient": [
        9161
      ]
    },
    "id": 22984,
    "license": "AGPLv3",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 22947,
        "literals": [
          "solidity",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:22:55"
      },
      {
        "absolutePath": "/home/runner/work/protocol-monorepo/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/ux/IRelayRecipient.sol",
        "file": "../interfaces/ux/IRelayRecipient.sol",
        "id": 22948,
        "nodeType": "ImportDirective",
        "scope": 22984,
        "sourceUnit": 9162,
        "src": "160:46:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 22950,
              "name": "IRelayRecipient",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9161,
              "src": "411:15:55",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRelayRecipient_$9161",
                "typeString": "contract IRelayRecipient"
              }
            },
            "id": 22951,
            "nodeType": "InheritanceSpecifier",
            "src": "411:15:55"
          }
        ],
        "contractDependencies": [
          9161
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 22949,
          "nodeType": "StructuredDocumentation",
          "src": "208:162:55",
          "text": " A base contract to be inherited by any contract that want to receive relayed transactions\n A subclass must use \"_msgSender()\" instead of \"msg.sender\""
        },
        "fullyImplemented": false,
        "id": 22983,
        "linearizedBaseContracts": [
          22983,
          9161
        ],
        "name": "BaseRelayRecipient",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              9154
            ],
            "documentation": {
              "id": 22952,
              "nodeType": "StructuredDocumentation",
              "src": "434:57:55",
              "text": " @dev Check if the forwarder is trusted"
            },
            "functionSelector": "572b6c05",
            "id": 22960,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isTrustedForwarder",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22956,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "563:8:55"
            },
            "parameters": {
              "id": 22955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22954,
                  "mutability": "mutable",
                  "name": "forwarder",
                  "nodeType": "VariableDeclaration",
                  "scope": 22960,
                  "src": "524:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22953,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "524:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "523:19:55"
            },
            "returnParameters": {
              "id": 22959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22958,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 22960,
                  "src": "580:4:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 22957,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "580:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "579:6:55"
            },
            "scope": 22983,
            "src": "496:90:55",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 22981,
              "nodeType": "Block",
              "src": "946:419:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 22976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 22971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 22967,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "964:3:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 22968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "src": "964:8:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "id": 22969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "964:15:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "3234",
                            "id": 22970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "983:2:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_24_by_1",
                              "typeString": "int_const 24"
                            },
                            "value": "24"
                          },
                          "src": "964:21:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 22973,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1008:3:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 22974,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1008:10:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 22972,
                            "name": "isTrustedForwarder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22960,
                            "src": "989:18:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 22975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "989:30:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "964:55:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f74207472757374656420666f72776172646572",
                        "id": 22977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1021:23:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c55544493bc7eeb535999264c70f56bda4911db54b18ae1e4ae3be74ec809c39",
                          "typeString": "literal_string \"Not trusted forwarder\""
                        },
                        "value": "Not trusted forwarder"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c55544493bc7eeb535999264c70f56bda4911db54b18ae1e4ae3be74ec809c39",
                          "typeString": "literal_string \"Not trusted forwarder\""
                        }
                      ],
                      "id": 22966,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "956:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "956:89:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22979,
                  "nodeType": "ExpressionStatement",
                  "src": "956:89:55"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1284:75:55",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1298:51:55",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1309:2:55",
                              "type": "",
                              "value": "96"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "calldatasize",
                                        "nodeType": "YulIdentifier",
                                        "src": "1329:12:55"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1329:14:55"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1344:2:55",
                                      "type": "",
                                      "value": "20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "1325:3:55"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1325:22:55"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "1312:12:55"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1312:36:55"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "1305:3:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1305:44:55"
                        },
                        "variableNames": [
                          {
                            "name": "ret",
                            "nodeType": "YulIdentifier",
                            "src": "1298:3:55"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 22964,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1298:3:55",
                      "valueSize": 1
                    }
                  ],
                  "id": 22980,
                  "nodeType": "InlineAssembly",
                  "src": "1275:84:55"
                }
              ]
            },
            "documentation": {
              "id": 22961,
              "nodeType": "StructuredDocumentation",
              "src": "592:264:55",
              "text": " @dev Return the transaction signer of this call\n if the call came through our trusted forwarder, return the original sender.\n otherwise, return `msg.sender`.\n should be used in the contract anywhere instead of msg.sender"
            },
            "id": 22982,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTransactionSigner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22962,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "891:2:55"
            },
            "returnParameters": {
              "id": 22965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22964,
                  "mutability": "mutable",
                  "name": "ret",
                  "nodeType": "VariableDeclaration",
                  "scope": 22982,
                  "src": "925:19:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 22963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "925:15:55",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "924:21:55"
            },
            "scope": 22983,
            "src": "861:504:55",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 22984,
        "src": "371:997:55"
      }
    ],
    "src": "35:1334:55"
  },
  "legacyAST": {
    "absolutePath": "/home/runner/work/protocol-monorepo/protocol-monorepo/packages/ethereum-contracts/contracts/ux/BaseRelayRecipient.sol",
    "exportedSymbols": {
      "BaseRelayRecipient": [
        22983
      ],
      "IRelayRecipient": [
        9161
      ]
    },
    "id": 22984,
    "license": "AGPLv3",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 22947,
        "literals": [
          "solidity",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:22:55"
      },
      {
        "absolutePath": "/home/runner/work/protocol-monorepo/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/ux/IRelayRecipient.sol",
        "file": "../interfaces/ux/IRelayRecipient.sol",
        "id": 22948,
        "nodeType": "ImportDirective",
        "scope": 22984,
        "sourceUnit": 9162,
        "src": "160:46:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 22950,
              "name": "IRelayRecipient",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9161,
              "src": "411:15:55",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRelayRecipient_$9161",
                "typeString": "contract IRelayRecipient"
              }
            },
            "id": 22951,
            "nodeType": "InheritanceSpecifier",
            "src": "411:15:55"
          }
        ],
        "contractDependencies": [
          9161
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 22949,
          "nodeType": "StructuredDocumentation",
          "src": "208:162:55",
          "text": " A base contract to be inherited by any contract that want to receive relayed transactions\n A subclass must use \"_msgSender()\" instead of \"msg.sender\""
        },
        "fullyImplemented": false,
        "id": 22983,
        "linearizedBaseContracts": [
          22983,
          9161
        ],
        "name": "BaseRelayRecipient",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              9154
            ],
            "documentation": {
              "id": 22952,
              "nodeType": "StructuredDocumentation",
              "src": "434:57:55",
              "text": " @dev Check if the forwarder is trusted"
            },
            "functionSelector": "572b6c05",
            "id": 22960,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isTrustedForwarder",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22956,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "563:8:55"
            },
            "parameters": {
              "id": 22955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22954,
                  "mutability": "mutable",
                  "name": "forwarder",
                  "nodeType": "VariableDeclaration",
                  "scope": 22960,
                  "src": "524:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22953,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "524:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "523:19:55"
            },
            "returnParameters": {
              "id": 22959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22958,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 22960,
                  "src": "580:4:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 22957,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "580:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "579:6:55"
            },
            "scope": 22983,
            "src": "496:90:55",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 22981,
              "nodeType": "Block",
              "src": "946:419:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 22976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 22971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 22967,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "964:3:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 22968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "src": "964:8:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "id": 22969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "964:15:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "3234",
                            "id": 22970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "983:2:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_24_by_1",
                              "typeString": "int_const 24"
                            },
                            "value": "24"
                          },
                          "src": "964:21:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 22973,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1008:3:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 22974,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1008:10:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 22972,
                            "name": "isTrustedForwarder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22960,
                            "src": "989:18:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 22975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "989:30:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "964:55:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f74207472757374656420666f72776172646572",
                        "id": 22977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1021:23:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c55544493bc7eeb535999264c70f56bda4911db54b18ae1e4ae3be74ec809c39",
                          "typeString": "literal_string \"Not trusted forwarder\""
                        },
                        "value": "Not trusted forwarder"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c55544493bc7eeb535999264c70f56bda4911db54b18ae1e4ae3be74ec809c39",
                          "typeString": "literal_string \"Not trusted forwarder\""
                        }
                      ],
                      "id": 22966,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "956:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "956:89:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22979,
                  "nodeType": "ExpressionStatement",
                  "src": "956:89:55"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1284:75:55",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1298:51:55",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1309:2:55",
                              "type": "",
                              "value": "96"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "calldatasize",
                                        "nodeType": "YulIdentifier",
                                        "src": "1329:12:55"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1329:14:55"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1344:2:55",
                                      "type": "",
                                      "value": "20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "1325:3:55"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1325:22:55"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "1312:12:55"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1312:36:55"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "1305:3:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1305:44:55"
                        },
                        "variableNames": [
                          {
                            "name": "ret",
                            "nodeType": "YulIdentifier",
                            "src": "1298:3:55"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 22964,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1298:3:55",
                      "valueSize": 1
                    }
                  ],
                  "id": 22980,
                  "nodeType": "InlineAssembly",
                  "src": "1275:84:55"
                }
              ]
            },
            "documentation": {
              "id": 22961,
              "nodeType": "StructuredDocumentation",
              "src": "592:264:55",
              "text": " @dev Return the transaction signer of this call\n if the call came through our trusted forwarder, return the original sender.\n otherwise, return `msg.sender`.\n should be used in the contract anywhere instead of msg.sender"
            },
            "id": 22982,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTransactionSigner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22962,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "891:2:55"
            },
            "returnParameters": {
              "id": 22965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22964,
                  "mutability": "mutable",
                  "name": "ret",
                  "nodeType": "VariableDeclaration",
                  "scope": 22982,
                  "src": "925:19:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 22963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "925:15:55",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "924:21:55"
            },
            "scope": 22983,
            "src": "861:504:55",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 22984,
        "src": "371:997:55"
      }
    ],
    "src": "35:1334:55"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.1",
  "updatedAt": "2021-04-09T14:34:37.323Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "isTrustedForwarder(address)": {
        "details": "Check if the forwarder is trusted"
      },
      "versionRecipient()": {
        "details": "EIP 2771 version NOTE: - It is not clear if it is actually from the EIP 2771.... - https://docs.biconomy.io/guides/enable-gasless-transactions/eip-2771"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "A base contract to be inherited by any contract that want to receive relayed transactions A subclass must use \"_msgSender()\" instead of \"msg.sender\"",
    "version": 1
  }
}